(()=>{var __webpack_modules__={"./src/js/effects/snowflake.js":()=>{eval("/* 控制下雪 */\r\nfunction snowFall(snow) {\r\n  /* 可配置属性 */\r\n  snow = snow || {}\r\n  this.maxFlake = snow.maxFlake || 10   /* 最多片数 */\r\n  this.flakeSize = snow.flakeSize || 10  /* 雪花形状 */\r\n  this.fallSpeed = snow.fallSpeed || 1   /* 坠落速度 */\r\n}\r\n\r\nconst mode = DreamConfig.effects_snowflake_mode\r\n\r\n/* 兼容写法 */\r\nlet requestAnimationFrame = window.requestAnimationFrame ||\r\n  window.mozRequestAnimationFrame ||\r\n  window.webkitRequestAnimationFrame ||\r\n  window.msRequestAnimationFrame ||\r\n  window.oRequestAnimationFrame ||\r\n  function(callback) { setTimeout(callback, 1000 / 60) }\r\n\r\nlet cancelAnimationFrame = window.cancelAnimationFrame ||\r\n  window.mozCancelAnimationFrame ||\r\n  window.webkitCancelAnimationFrame ||\r\n  window.msCancelAnimationFrame ||\r\n  window.oCancelAnimationFrame\r\n\r\n/* 开始下雪 */\r\nsnowFall.prototype.start = function(){\r\n  /* 创建画布 */\r\n  snowCanvas.apply(this)\r\n  /* 创建雪花形状 */\r\n  createFlakes.apply(this)\r\n  /* 画雪 */\r\n  drawSnow.apply(this)\r\n}\r\n\r\n/* 创建画布 */\r\nfunction snowCanvas() {\r\n  /* 添加Dom结点 */\r\n  var snowcanvas = document.createElement('canvas')\r\n  snowcanvas.id = 'snowfall'\r\n  snowcanvas.width = document.body.offsetWidth\r\n  snowcanvas.height = window.innerHeight\r\n  snowcanvas.setAttribute('class', `canvas_effects ${mode}`)\r\n  snowcanvas.setAttribute('style', 'z-index: 9999;')\r\n  document.getElementsByTagName('body')[0].appendChild(snowcanvas)\r\n  this.canvas = snowcanvas\r\n  this.ctx = snowcanvas.getContext('2d')\r\n\r\n  /* 窗口大小改变的处理 */\r\n  window.onresize = function() {\r\n    snowcanvas.width = document.body.offsetWidth\r\n    snowcanvas.height = window.innerHeight\r\n  }\r\n\r\n}\r\n\r\n/* 雪运动对象 */\r\nfunction flakeMove(canvasWidth, canvasHeight, flakeSize, fallSpeed) {\r\n  this.x = Math.floor(Math.random() * canvasWidth)   /* x坐标 */\r\n  this.y = Math.floor(Math.random() * canvasHeight)  /* y坐标 */\r\n  this.size = Math.random() * flakeSize + 2          /* 形状 */\r\n  this.maxSize = flakeSize                           /* 最大形状 */\r\n  this.speed = Math.random() * 1 + fallSpeed         /* 坠落速度 */\r\n  this.fallSpeed = fallSpeed                         /* 坠落速度 */\r\n  this.velY = this.speed                             /* Y方向速度 */\r\n  this.velX = 0                                      /* X方向速度 */\r\n  this.stepSize = Math.random() / 30                 /* 步长 */\r\n  this.step = 0                                       /* 步数 */\r\n}\r\n\r\nflakeMove.prototype.update = function() {\r\n  var x = this.x,\r\n    y = this.y\r\n  /* 左右摆动(余弦) */\r\n  this.velX *= 0.98\r\n  if (this.velY <= this.speed) {\r\n    this.velY = this.speed\r\n  }\r\n  this.velX += Math.cos(this.step += .05) * this.stepSize\r\n\r\n  this.y += this.velY\r\n  this.x += this.velX\r\n  /* 飞出边界的处理 */\r\n  if (this.x >= canvas.width || this.x <= 0 || this.y >= canvas.height || this.y <= 0) {\r\n    this.reset(canvas.width, canvas.height)\r\n  }\r\n}\r\n\r\n/* 飞出边界-放置最顶端继续坠落 */\r\nflakeMove.prototype.reset = function(width, height) {\r\n  this.x = Math.floor(Math.random() * width)\r\n  this.y = 0\r\n  this.size = Math.random() * this.maxSize + 2\r\n  this.speed = Math.random() * 1 + this.fallSpeed\r\n  this.velY = this.speed\r\n  this.velX = 0\r\n}\r\n\r\n// 渲染雪花-随机形状（此处可修改雪花颜色！！！）\r\nflakeMove.prototype.render = function(ctx) {\r\n  var snowFlake = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size)\r\n  snowFlake.addColorStop(0, 'rgba(255, 255, 255, 0.9)')  /* 此处是雪花颜色，默认是白色 */\r\n  snowFlake.addColorStop(.5, 'rgba(255, 255, 255, 0.5)') /* 若要改为其他颜色，请自行查 */\r\n  snowFlake.addColorStop(1, 'rgba(255, 255, 255, 0)')    /* 找16进制的RGB 颜色代码。 */\r\n  ctx.save()\r\n  ctx.fillStyle = snowFlake\r\n  ctx.beginPath()\r\n  ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2)\r\n  ctx.fill()\r\n  ctx.restore()\r\n}\r\n\r\n/* 创建雪花-定义形状 */\r\nfunction createFlakes() {\r\n  var maxFlake = this.maxFlake,\r\n    flakes = this.flakes = [],\r\n    canvas = this.canvas\r\n  for (var i = 0; i < maxFlake; i++) {\r\n    flakes.push(new flakeMove(canvas.width, canvas.height, this.flakeSize, this.fallSpeed))\r\n  }\r\n}\r\n\r\n/* 画雪 */\r\nfunction drawSnow() {\r\n  const isNight = document.documentElement.classList.contains('night')\r\n  if (mode === 'all' || (mode === 'day' && !isNight) || (mode === 'night' && isNight)) {\r\n    var maxFlake = this.maxFlake,\r\n      flakes = this.flakes\r\n    ctx = this.ctx, canvas = this.canvas\r\n    /* 清空雪花 */\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n    for (var e = 0; e < maxFlake; e++) {\r\n      flakes[e].update()\r\n      flakes[e].render(ctx)\r\n    }\r\n  }\r\n  that = this\r\n  /* 一帧一帧的画 */\r\n  this.loop = requestAnimationFrame(function() {\r\n    drawSnow.apply(that)\r\n  })\r\n}\r\n\r\n/* 调用及控制方法 */\r\nvar snow = new snowFall({maxFlake:150})\r\nsnow.start()\n\n//# sourceURL=webpack://halo-theme-dream2.0-plus/./src/js/effects/snowflake.js?")}},__webpack_exports__={};__webpack_modules__["./src/js/effects/snowflake.js"]()})();