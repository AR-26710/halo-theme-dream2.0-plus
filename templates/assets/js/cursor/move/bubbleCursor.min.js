(()=>{var __webpack_modules__={"./src/js/cursor/move/bubbleCursor.js":()=>{eval("function bubbleCursor(options) {\r\n  let hasWrapperEl = options && options.element\r\n  let element = hasWrapperEl || document.body\r\n\r\n  let width = window.innerWidth\r\n  let height = window.innerHeight\r\n  let cursor = { x: width / 2, y: width / 2 }\r\n  let particles = []\r\n  let canvas, context\r\n\r\n  let canvImages = []\r\n\r\n  function init(wrapperEl) {\r\n    canvas = document.createElement('canvas')\r\n    context = canvas.getContext('2d')\r\n\r\n    canvas.style.top = '0px'\r\n    canvas.style.left = '0px'\r\n    canvas.style.pointerEvents = 'none'\r\n\r\n    if (hasWrapperEl) {\r\n      canvas.style.position = 'absolute'\r\n      element.appendChild(canvas)\r\n      canvas.width = element.clientWidth\r\n      canvas.height = element.clientHeight\r\n    } else {\r\n      canvas.style.position = 'fixed'\r\n      document.body.appendChild(canvas)\r\n      canvas.width = width\r\n      canvas.height = height\r\n    }\r\n\r\n    bindEvents()\r\n    loop()\r\n  }\r\n\r\n  // Bind events that are needed\r\n  function bindEvents() {\r\n    element.addEventListener('mousemove', onMouseMove)\r\n    element.addEventListener('touchmove', onTouchMove, { passive: true })\r\n    element.addEventListener('touchstart', onTouchMove, { passive: true })\r\n    window.addEventListener('resize', onWindowResize)\r\n  }\r\n\r\n  function onWindowResize(e) {\r\n    width = window.innerWidth\r\n    height = window.innerHeight\r\n\r\n    if (hasWrapperEl) {\r\n      canvas.width = element.clientWidth\r\n      canvas.height = element.clientHeight\r\n    } else {\r\n      canvas.width = width\r\n      canvas.height = height\r\n    }\r\n  }\r\n\r\n  function onTouchMove(e) {\r\n    if (e.touches.length > 0) {\r\n      for (let i = 0; i < e.touches.length; i++) {\r\n        addParticle(\r\n          e.touches[i].clientX,\r\n          e.touches[i].clientY,\r\n          canvImages[Math.floor(Math.random() * canvImages.length)]\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  function onMouseMove(e) {\r\n    if (hasWrapperEl) {\r\n      const boundingRect = element.getBoundingClientRect()\r\n      cursor.x = e.clientX - boundingRect.left\r\n      cursor.y = e.clientY - boundingRect.top\r\n    } else {\r\n      cursor.x = e.clientX\r\n      cursor.y = e.clientY\r\n    }\r\n\r\n    addParticle(cursor.x, cursor.y)\r\n  }\r\n\r\n  function addParticle(x, y, img) {\r\n    particles.push(new Particle(x, y, img))\r\n  }\r\n\r\n  function updateParticles() {\r\n    context.clearRect(0, 0, width, height)\r\n\r\n    // Update\r\n    for (let i = 0; i < particles.length; i++) {\r\n      particles[i].update(context)\r\n    }\r\n\r\n    // Remove dead particles\r\n    for (let i = particles.length - 1; i >= 0; i--) {\r\n      if (particles[i].lifeSpan < 0) {\r\n        particles.splice(i, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  function loop() {\r\n    updateParticles()\r\n    requestAnimationFrame(loop)\r\n  }\r\n\r\n  function Particle(x, y, canvasItem) {\r\n    const lifeSpan = Math.floor(Math.random() * 60 + 60)\r\n    this.initialLifeSpan = lifeSpan //\r\n    this.lifeSpan = lifeSpan //ms\r\n    this.velocity = {\r\n      x: (Math.random() < 0.5 ? -1 : 1) * (Math.random() / 10),\r\n      y: -0.4 + Math.random() * -1,\r\n    }\r\n    this.position = { x: x, y: y }\r\n    this.canv = canvasItem\r\n\r\n    this.baseDimension = 4\r\n\r\n    this.update = function(context) {\r\n      this.position.x += this.velocity.x\r\n      this.position.y += this.velocity.y\r\n      this.velocity.x += ((Math.random() < 0.5 ? -1 : 1) * 2) / 75\r\n      this.velocity.y -= Math.random() / 600\r\n      this.lifeSpan--\r\n\r\n      const scale =\r\n        0.2 + (this.initialLifeSpan - this.lifeSpan) / this.initialLifeSpan\r\n\r\n      context.fillStyle = '#e6f1f7'\r\n      context.strokeStyle = '#3a92c5'\r\n      context.beginPath()\r\n      context.arc(\r\n        this.position.x - (this.baseDimension / 2) * scale,\r\n        this.position.y - this.baseDimension / 2,\r\n        this.baseDimension * scale,\r\n        0,\r\n        2 * Math.PI\r\n      )\r\n\r\n      context.stroke()\r\n      context.fill()\r\n\r\n      context.closePath()\r\n    }\r\n  }\r\n\r\n  init()\r\n}\r\nnew bubbleCursor()\n\n//# sourceURL=webpack://halo-theme-dream2.0-plus/./src/js/cursor/move/bubbleCursor.js?")}},__webpack_exports__={};__webpack_modules__["./src/js/cursor/move/bubbleCursor.js"]()})();